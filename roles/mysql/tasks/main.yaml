  #  - name: MYSQL libraries 
  #    ansible.builtin.pip:
  #     name: "{{item}}"
  #     executable: pip3.9
  #    loop: 
  #      - cryptography
  #      - PyMySQL
  #  - name: Install mysql server
  #    ansible.builtin.package:
  #      name: mysql-server
  #      state: installed

  #  - name: Start enable mysql server service    
  #    ansible.builtin.service: 
  #      name: mysqld
  #      state: started 
  #      enabled: yes 

  #  - name: Collect all info except settings and users by root
  #    community.mysql.mysql_info:
  #       login_user: root
  #       login_password: "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql-root-password', decrypt=False  ) }}"
  #       login_host: "{{ mysql_host }}"
  #    register: mysql_info
  #    ignore_errors: true

  #  - name: Print the mysql output 
  #    ansible.builtin.debug:
  #        msg: "My SQL info; {{ mysql_info }}"

  #  - name: Setup root password 
  #    ansible.builtin.command: " mysql_secure_installation --set-root-pass {{ {{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql-root-password', decrypt=False  ) }} "
  #    when: mysql_info.failed is true
- name: Configure MySQL server
  hosts: all
  become: yes

  tasks:
    - name: Install required Python libraries
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: pip3.9
      loop:
        - cryptography
        - PyMySQL

    - name: Install MySQL server
      ansible.builtin.package:
        name: mysql-server
        state: present

    - name: Start and enable MySQL service
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: yes

    - name: Collect MySQL server info
      community.mysql.mysql_info:
        login_user: root
        login_password: "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql-root-password', decrypt=False) }}"
        login_host: "{{ mysql_host }}"
      register: mysql_info
      ignore_errors: true

    - name: Print the MySQL info
      ansible.builtin.debug:
        msg: "MySQL Info: {{ mysql_info }}"

    - name: Setup root password
      ansible.builtin.command:
        cmd: >
          mysql_secure_installation --set-root-pass
          "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql-root-password', decrypt=False) }}"
      when: mysql_info.failed is defined and mysql_info.failed

